.. portcullis documentation master file, created by
   sphinx-quickstart on Tue Dec  2 15:59:49 2014.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

.. image:: images/portcullis_logo.png

Welcome to Portcullis' documentation
====================================
    
Portcullis stands for PORTable CULLing of Invalid Splice junctions from pre-aligned 
RNA-seq data.  It is known that RNAseq mapping tools generate many invalid junction
predictions, particularly in deep datasets with high coverage over splice sites.
In order to address this, instead for creating a new RNAseq mapper, with a focus 
on SJ accuracy we created a tool that takes in a BAM 
file generated by an RNAseq mapper of the user's own choice (e.g. Tophat2, Gsnap, 
STAR2 or HISAT2) as input (i.e. it's portable).  It then, analyses and quantifies 
all splice junctions in the file before, filtering (culling) those which are unlikely 
to be genuine.  Portcullis output's junctions in a variety of formats making it
suitable for downstream analysis (such as differential splicing analysis and gene
modelling) without additional work.

Contents:

.. toctree::
    :numbered:
    :maxdepth: 2

    requirements
    installation
    quickstart
    using
    metrics
    junctools
    faq
    
    


.. _issues:

Issues
======

Should you discover any issues with portcullis, or wish to request a new feature 
please raise a ticket at https://github.com/maplesond/portcullis/issues.  Alternatively, 
contact Daniel Mapleson at: daniel.mapleson@earlham.ac.uk


.. _availability:

Availability and License
========================

Open source code available on github: https://github.com/maplesond/portcullis.git

Spectre is available under GNU GLP V3: http://www.gnu.org/licenses/gpl.txt


Additional Resources
====================

Portcullis was presented at the Genome Science 2016 conference: :download:`poster <assets/portcullis_genomescience2016_poster.pdf>`; :download:`slides <assets/portcullis_genomescience2016_slides.pdf>`


Authors and Acknowledgements
============================

**Daniel Mapleson** - Project lead, software developer

**David Swarbreck** came up with the original plan and has helped design and
guide the project from day 1.

**Luca Venturini** made the logic for the rule-based filtering and has been constantly
testing the software helping to find bugs, improve runtime performance at every
stage.

Thanks to **Gemy Kaithokattil** and **Shabonham Caim** for hunting bugs and providing 
valuable feedback and **Sarah Bastkowski** for helping me understanding 
the various machine learning algorithms and the maths behind it.  Also thanks to 
**Chris Bennett** for making the logo.

Finally, thanks to the Earlham Insitute and the NBI computing services for supporting
the work.
